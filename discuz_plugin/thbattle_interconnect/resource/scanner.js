// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var msg;

  msg = function(raw_msg) {
    var attrib, box, color, commands, default_attrib, ins_text, last, match, name, restore, rgba, rgba_string, scanner, shadow;
    box = jq('<span class="content">：</span>');
    scanner = /\|(c)[A-Fa-f0-9]{8}|\|(s)[12][A-Fa-f0-9]{8}|\|([BbIiUurH|RGYW]|[LD]B)|\|(\![RGOB])/g;
    default_attrib = {
      bold: false,
      italic: false,
      underline: false,
      color: null,
      shadow: null
    };
    attrib = void 0;
    restore = function() {
      return attrib = jq.extend(true, {}, default_attrib);
    };
    restore();
    rgba = function(r, g, b, a) {
      return {
        r: r,
        g: g,
        b: b,
        a: a / 255.0
      };
    };
    rgba_string = function(c) {
      return "rgba(" + c.r + "," + c.g + "," + c.b + "," + c.a + ")";
    };
    color = function(tok) {
      var i;
      color = (function() {
        var _i, _results;
        _results = [];
        for (i = _i = 2; _i <= 8; i = _i += 2) {
          _results.push(parseInt(tok.slice(i, +(i + 1) + 1 || 9e9), 16));
        }
        return _results;
      })();
      return attrib.color = rgba.apply(null, color);
    };
    shadow = function(tok) {
      var i;
      color = (function() {
        var _i, _results;
        _results = [];
        for (i = _i = 3; _i <= 9; i = _i += 2) {
          _results.push(parseInt(tok.slice(i, +(i + 1) + 1 || 9e9), 16));
        }
        return _results;
      })();
      attrib.shadow = rgba.apply(null, color);
      return attrib.shadow.level = parseInt(tok[2]);
    };
    ins_text = function(text) {
      var span;
      if (text) {
        span = jq('<span></span>').text(text).css({
          'font-weight': attrib.bold ? 'bold' : void 0,
          'font-style': attrib.italic ? 'italic' : void 0,
          'text-decoration': attrib.underline ? 'underline' : void 0,
          'color': attrib.color ? rgba_string(attrib.color) : void 0,
          'text-shadow': attrib.shadow ? "0 0 " + (.3 * attrib.shadow.level) + "em " + (rgba_string(attrib.shadow)) : void 0
        });
        return box.append(span);
      }
    };
    commands = {
      c: color,
      s: shadow,
      B: function() {
        return attrib.bold = true;
      },
      b: function() {
        return attrib.bold = false;
      },
      I: function() {
        return attrib.italic = true;
      },
      i: function() {
        return attrib.italic = false;
      },
      U: function() {
        return attrib.underline = true;
      },
      u: function() {
        return attrib.underline = false;
      },
      H: function() {
        color('|c000000ff');
        return shadow('|s2000000ff');
      },
      'r': restore,
      '|': function() {
        return ins_text('|');
      },
      R: function() {
        return color('|cff3535ff');
      },
      G: function() {
        return color('|c208020ff');
      },
      Y: function() {
        return color('|cffff30ff');
      },
      LB: function() {
        return color('|c90dce8ff');
      },
      DB: function() {
        return color('|c000060ff');
      },
      W: function() {
        return color('|cffffffff');
      },
      '!R': function() {
        return color('|cff3535ff');
      },
      '!G': function() {
        return color('|c208020ff');
      },
      '!O': function() {
        return color('|cffcc77ff');
      },
      '!B': function() {
        return color('|c000060ff');
      }
    };
    last = 0;
    while ((match = scanner.exec(raw_msg))) {
      ins_text(raw_msg.slice(last, match.index));
      last = scanner.lastIndex;
      name = match.slice(1).reduce(function(x, y) {
        return x || y;
      });
      commands[name](match[0]);
    }
    return ins_text(raw_msg.slice(last));
  };

  THB.showAyaNews = function(data) {
    return jq('#ayanews_content').append(jq('<span class="source"></span>').text(THB.servers[data[0]])).append(jq('<span class="tag">『文々。新闻』</span>')).append(jq('<span class="username"></span>').text(data[1])).append(msg(data[2])).append(jq('<br />'));
  };

}).call(this);
